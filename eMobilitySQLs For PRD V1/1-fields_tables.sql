ALTER TABLE ODB.BLOB_TABLE ADD (DOC_TYPE VARCHAR2(100 CHAR));
ALTER TABLE ODB.DEFECT_REPORT ADD (CABIN_PART_ID NUMBER);
ALTER TABLE ODB.DEFECT_REPORT ADD (IOS_SYNC DATE);
ALTER TABLE ODB.DEFECT_REPORT ADD (CABIN_POSITION VARCHAR2(20 CHAR));
ALTER TABLE ODB.DEFECT_REPORT_AUDIT ADD (EMOBILITY_DEFERRED_BY VARCHAR2(10 CHAR));
ALTER TABLE ODB.DEFECT_REPORT_AUDIT ADD (EMOBILITY_CLOSED_BY VARCHAR2(10 CHAR));
ALTER TABLE ODB.DEFECT_REPORT_TROUBLE_SHOOTING ADD (REQUIRED_INSPECTION_DATE DATE); 
ALTER TABLE ODB.TASK_CARD_EMPLOYEE_ASSIGNED ADD (SYNC VARCHAR2(10 CHAR));
ALTER TABLE ODB.TASK_CARD_EMPLOYEE_ASSIGNED ADD (SYNC_DATE DATE ); 
ALTER TABLE ODB.TASK_CARD_EMPLOYEE_ASSIGNED ADD (INSPECTION_FLAG VARCHAR2(10 CHAR) );
ALTER TABLE ODB.WO_TASK_CARD ADD (PANEL_TC VARCHAR2(10 CHAR)) ;
ALTER TABLE ODB.WO_TASK_CARD_ITEM ADD (NR_TC_REFERENCE  VARCHAR2(35 CHAR));
ALTER TABLE ODB.WO_TASK_CARD_ITEM ADD (PANEL_REF VARCHAR2(50 CHAR)) ;
ALTER TABLE ODB.INTELLI_FORM_DETAIL ADD (GRID_POS_Z NUMBER(4,0) );
ALTER TABLE ODB.INTELLI_FORM_DETAIL ADD (INTERFACE_EXTERNAL_REFERENCE VARCHAR2(400 BYTE));
ALTER TABLE ODB.STYLESHEET_CONTENT MODIFY (TASK_CARD NULL);
ALTER TABLE ODB.STYLESHEET_CONTENT MODIFY (TASK_CARD_ITEM NULL);
ALTER TABLE ODB.STYLESHEET_CONTENT MODIFY (TASK_CARD_TYPE NULL);
ALTER TABLE ODB.WO_TASK_DISCREPANCY MODIFY (ASSIGN_TO VARCHAR2(25 CHAR));
ALTER TABLE ODB.TRAXDOC ADD (AERODOX_FLAG VARCHAR2(10 CHAR));
ALTER TABLE ODB.LOCATION_MASTER ADD (BLOB_NO NUMBER );
ALTER TABLE ODB.AC_TYPE_SERIES_MASTER ADD (WEIGHT NUMBER(8));
ALTER TABLE ODB.PN_INVENTORY_DETAIL ADD (RFID_EPC VARCHAR2(30 CHAR));
ALTER TABLE ODB.PROFILE_MASTER ADD (BLOB_NO NUMBER(8, 0));
ALTER TABLE ODB.WO_TASK_CARD_PN ADD (REFERENCE_LOT VARCHAR2(100 CHAR));
ALTER TABLE ODB.INTELLI_FORM_DETAIL  MODIFY (GRID_POS_X NUMBER(9, 5)); 
ALTER TABLE ODB.INTELLI_FORM_DETAIL  MODIFY (GRID_POS_Y NUMBER(9, 5)); 
ALTER TABLE ODB.INTELLI_FORM_DETAIL  MODIFY (GRID_POS_Z NUMBER(9, 5));
ALTER TABLE ODB.WO_TASK_CARD ADD (
									EXCLUDE_TYPE             VARCHAR2(45 CHAR),
									HOURS                    NUMBER(10,2),
									COST                     NUMBER(16,2),
									COST_MATERIAL            NUMBER(16,2),
									SELL_LABOR_CURRENCY      NUMBER(16,2),
									SELL_MATERIAL_CURRENCY   NUMBER(16,2),
									REMARKS                  VARCHAR2(4000 CHAR)
								);
ALTER TABLE ODB.WO_TASK_CARD_ADUIT ADD (
                                        EXCLUDE_CONTRACT         VARCHAR2(10 CHAR),
										HOURS                    NUMBER(10,2),
										COST                     NUMBER(16,2),
										COST_MATERIAL            NUMBER(16,2),
										SELL_LABOR_CURRENCY      NUMBER(16,2),
										SELL_MATERIAL_CURRENCY   NUMBER(16,2),
										REMARKS                  VARCHAR2(4000 CHAR)
									);
ALTER TABLE ODB.PHASE_TEMPLATE_DETAIL ADD (
											PANEL_ACCESS VARCHAR2(10 CHAR),
											DURATION NUMBER(10, 2),
											FROM_LINK NUMBER(8),
											TO_LINK NUMBER(8),
											PARENT_ITEM NUMBER(8)
										  );
ALTER TABLE ODB.WO_TEMPLATE_DETAIL ADD (
                                         DURATION NUMBER(10, 2),
										 PARENT_ITEM NUMBER(8),
										 TO_LINK NUMBER(8, 0),
										 FROM_LINK NUMBER(8, 0)
										);


CREATE TABLE ODB.EMPLOYEE_ASSIGNMENTS 
(
  EMPLOYEE VARCHAR2(10 CHAR) NOT NULL 
  ,AC_LIST VARCHAR2(4000 CHAR) 
  ,LOCATION_LIST VARCHAR2(4000 CHAR) 
  ,GATE_LIST VARCHAR2(4000 CHAR) 
  ,CREATED_BY VARCHAR2(10 CHAR) 
  ,CREATED_DATE DATE 
  ,MODIFIED_BY VARCHAR2(10 CHAR) 
  ,MODIFIED_DATE DATE 
  ,NOTES NUMBER(8, 0) 
  ,CONSTRAINT EMPLOYEE_ASSIGNMENTS_PK PRIMARY KEY 
  (
    EMPLOYEE 
  )
  ENABLE 
);


CREATE TABLE ODB.FLIGHTS_EMPLOYEE 
( 
  ID_EMPLOYEE VARCHAR2(50 CHAR) 
  ,ID_FLIGHT NUMBER 
  ,CREATED_BY VARCHAR2(10 BYTE) 
  ,CREATED_DATE DATE 
  ,MODIFIED_BY VARCHAR2(10 BYTE) 
  ,MODIFIED_DATE DATE
);

  
CREATE TABLE ODB.IOS_NOTIFICATION_QUEUE 
(
  ID NUMBER(16) NOT NULL 
  ,MESSAGE_TYPE VARCHAR2(50) NOT NULL 
  ,CONTENT_DATA VARCHAR2(4000) NOT NULL 
  ,CREATE_DATE DATE NOT NULL 
  ,SYNC_DATE DATE 
  ,CONSTRAINT IOS_NOTIFICATION_QUEUE_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);


CREATE TABLE ODB.EMOBILITY_PICKLIST_QUEUE 
(
  TANSACTION_ID NUMBER(16, 0) NOT NULL 
  ,PN VARCHAR2(35 CHAR) NOT NULL 
  ,QTY NUMBER(8, 2) 
  ,BATCH_NO NUMBER(8, 0) 
  ,SN VARCHAR2(20 CHAR) 
  ,CONSTRAINT EMOBILITY_PICKLIST_QUEUE_PK PRIMARY KEY 
  (
    TANSACTION_ID 
  , PN 
  )
  ENABLE
);


CREATE TABLE ODB.GROUP_ASSIGN 
(
  GROUP_ID VARCHAR2(20 CHAR) NOT NULL 
  ,DESCRIPTION VARCHAR2(100 CHAR) 
  ,CREATED_BY VARCHAR2(10 CHAR) 
  ,CREATED_DATE DATE 
  ,MODIFIED_BY VARCHAR2(10 CHAR) 
  ,MODIFIED_DATE DATE 
  ,LOCATION VARCHAR2(10 CHAR)
  ,CONSTRAINT GROUP_EMPLOYEE_PK PRIMARY KEY 
  (
    GROUP_ID 
  )
  ENABLE 
);


CREATE TABLE ODB.GROUP_EMPLOYEE 
(
  GROUP_ID VARCHAR2(20 CHAR) NOT NULL 
  ,EMPLOYEE VARCHAR2(10 CHAR) NOT NULL 
  ,CREATED_BY VARCHAR2(10 CHAR) 
  ,CREATED_DATE DATE 
  ,MODIFIED_BY VARCHAR2(10 CHAR) 
  ,MODIFIED_DATE DATE 
  ,CONSTRAINT PK_GROUP_EMPLOYEE PRIMARY KEY 
  (
    GROUP_ID 
  , EMPLOYEE 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX GROUP_EMPLOYEE_PK1 ON GROUP_EMPLOYEE (GROUP_ID ASC, EMPLOYEE ASC) 
  )
  ENABLE 
);

ALTER TABLE ODB.GROUP_EMPLOYEE ADD CONSTRAINT FK_GROUP_EMPLOYEE FOREIGN KEY
(
  GROUP_ID 
)
REFERENCES ODB.GROUP_ASSIGN
(
  GROUP_ID 
)
ENABLE;


CREATE TABLE ODB.GROUP_ASSIGN_FLIGHT
(
  GROUP_ID VARCHAR2(20 CHAR) NOT NULL 
  ,WO NUMBER(8, 0) NOT NULL 
  ,FLIGHT VARCHAR2(20 CHAR) NOT NULL
  ,CONSTRAINT GROUP_ASSIGN_FLIGHT_PK PRIMARY KEY 
  (
    GROUP_ID 
    ,WO 
    ,FLIGHT
  )
  ENABLE 
);


CREATE TABLE ODB.PROD_CONTROL_PART_FILTER 
(
  EMPLOYEE VARCHAR2(10) NOT NULL 
  ,ROB VARCHAR2(10 CHAR) 
  ,CATEGORY VARCHAR2(10 CHAR) 
  ,SUB_CATEGORY VARCHAR2(1000 CHAR) 
  ,PN VARCHAR2(35 CHAR) 
  ,DESCRIPTION VARCHAR2(1000 CHAR) 
  ,QTY NUMBER(8, 2) 
  ,CREATED_DATE DATE 
  ,CREATED_BY VARCHAR2(10 CHAR) 
  ,TASK VARCHAR2(35 CHAR) 
  ,TASK_STATUS VARCHAR2(1000 CHAR) 
  ,REQPICK VARCHAR2(100 CHAR) 
  ,ACTIONED_BY VARCHAR2(10 CHAR) 
  ,VENDOR VARCHAR2(10 CHAR) 
  ,SHIP_VIA VARCHAR2(1000 CHAR) 
  ,AWB VARCHAR2(1000 CHAR) 
  ,NOTES VARCHAR2(1000 CHAR) 
  ,DELY_DATE DATE 
  ,ACT_DATE DATE 
  ,REQPL_STATUS VARCHAR2(1000 CHAR) 
  ,CONSTRAINT PROD_CONTROL_PART_FILTER_PK PRIMARY KEY 
  (
    EMPLOYEE 
  )
  ENABLE 
);


CREATE TABLE ODB.WIP_AUDIT
(
  WO NUMBER(8, 0) NOT NULL 
  ,TASK_CARD VARCHAR2(35 CHAR) NOT NULL 
  ,TASK_CARD_ITEM NUMBER(5, 0) NOT NULL 
  ,CATEGORY VARCHAR2(10 BYTE) 
  ,SKILL VARCHAR2(10 BYTE) NOT NULL 
  ,EMPLOYEE VARCHAR2(10 BYTE) NOT NULL 
  ,PASSWORD VARCHAR2(260 BYTE) 
  ,"SELECT" VARCHAR2(1 BYTE) 
  ,START_DATE DATE 
  ,START_TIME DATE 
  ,NOTES NUMBER(8, 0) 
  ,CREATED_BY VARCHAR2(10 BYTE) 
  ,CREATED_DATE DATE 
  ,MODIFIED_BY VARCHAR2(10 BYTE) 
  ,MODIFIED_DATE DATE 
  ,TASK_CARD_PN VARCHAR2(35 CHAR) NOT NULL 
  ,TASK_CARD_PN_SN VARCHAR2(35 CHAR) NOT NULL 
  ,AC VARCHAR2(10 BYTE) NOT NULL 
  ,PASSWORD_CLOSED VARCHAR2(260 CHAR) 
  ,SIGN_IN_TYPE VARCHAR2(10 BYTE) 
  ,SIGN_IN_GROUP NUMBER(8, 0) 
  ,STATUS VARCHAR2(10 CHAR) 
  ,REASON VARCHAR2(500 CHAR)
  ,CONSTRAINT PK_WIP_AUDIT PRIMARY KEY 
  (
    WO 
  , TASK_CARD 
  , EMPLOYEE 
  , AC 
  , TASK_CARD_PN 
  , TASK_CARD_PN_SN 
  , TASK_CARD_ITEM 
  , SKILL 
  , CREATED_DATE
  )
  ENABLE 
 );


CREATE TABLE ODB.LOCATION_CAPACITY_BOARD 
(
  LOCATION VARCHAR2(10 CHAR) NOT NULL 
  ,AC VARCHAR2(10 CHAR) NOT NULL 
  ,SITE VARCHAR2(10 CHAR) NOT NULL 
  ,START_DATE DATE NOT NULL 
  ,END_DATE DATE 
  ,TOP NUMBER(8) 
  ,LEFT NUMBER(8) 
  ,CREATED_BY VARCHAR2(10 CHAR) 
  ,CREATED_DATE DATE 
  ,MODIFIED_BY VARCHAR2(10 CHAR) 
  ,MODIFIED_DATE DATE 
  ,NOTES NUMBER(8) 
  ,BLOB_NO NUMBER(8) 
  ,IMAGE VARCHAR2(100 CHAR) 
  ,WEIGHT NUMBER(8)
  ,CONSTRAINT LOCATION_CAPACITY_BOARD_PK PRIMARY KEY 
  (
    LOCATION 
  , AC 
  , SITE 
  , START_DATE 
  )
  ENABLE 
);


CREATE TABLE ODB.EMOBILITY_GEO_LOC 
(
  EMPLOYEE VARCHAR2(10) NOT NULL 
  ,LOGIN_DATE DATE 
  ,APP VARCHAR2(20) 
  ,LONGITUDE NUMBER(20, 12)
  ,LATITUDE NUMBER(20, 12)
  ,CONSTRAINT EMOBILITY_GEO_LOC_PK PRIMARY KEY 
  (
    EMPLOYEE 
  )
  ENABLE 
);


CREATE TABLE ODB.AIRPORT_CODES 
(
  ICAO VARCHAR2(4 CHAR) NOT NULL 
  ,IATA VARCHAR2(3 CHAR) 
  ,NAME VARCHAR2(2000 CHAR) 
  ,CITY VARCHAR2(2000 CHAR) 
  ,COUNTRY VARCHAR2(2000 CHAR) 
  ,LAT_DEG NUMBER 
  ,LAT_MIN NUMBER 
  ,LAT_SEC NUMBER 
  ,LAT_DIR VARCHAR2(10 CHAR) 
  ,LONG_DEG NUMBER 
  ,LONG_MIN NUMBER 
  ,LONG_SEC NUMBER 
  ,LONG_DIR VARCHAR2(10 CHAR) 
  ,ALTITUDE NUMBER 
  ,LATITUDE NUMBER(16, 6) 
  ,LONGITUDE NUMBER(16, 6) 
  ,CONSTRAINT AIRPORT_CODES_PK PRIMARY KEY 
  (
    ICAO 
  )
  ENABLE 
);


CREATE TABLE ODB.FLIGHT_CRS 
(
  EMPLOYEE VARCHAR2(10 CHAR) NOT NULL 
  ,MECH_CRS_DATE DATE 
  ,PILOT_CRS_DATE DATE 
  ,FLIGHT VARCHAR2(10 CHAR) NOT NULL 
  ,ORIGINAL_SCHEDULED_DATE DATE NOT NULL 
  ,AC VARCHAR2(10 CHAR) NOT NULL 
  ,ORIGIN VARCHAR2(10 CHAR) NOT NULL 
  ,DESTINATION VARCHAR2(10 CHAR) NOT NULL 
  ,CONSTRAINT FLIGHT_CRS_PK PRIMARY KEY 
  (
    EMPLOYEE 
  , FLIGHT 
  , ORIGINAL_SCHEDULED_DATE 
  , AC 
  , ORIGIN 
  , DESTINATION 
  )
  ENABLE 
);


CREATE TABLE ODB.IOS_PRINTING_JOBS
(
  UNIQUE_ID NUMBER(16,0) 
  ,PRINT_WINDOW  VARCHAR2(100 CHAR)
  ,SELECTED_PRINT  VARCHAR2(100 CHAR)
  ,PRINT_TITLE  VARCHAR2(1000 CHAR)
  ,COMPARISON_OPERATOR VARCHAR2(10 CHAR)
  ,PRINT_PARAMETERS CLOB
  ,OBJECT_PARAMETERS BLOB
  ,PRINT_STATUS   VARCHAR2(15 CHAR)
  ,TRAX_USER VARCHAR2(10 CHAR) 
  ,CREATED_DATE  DATE
  ,START_DATE  DATE
  ,FINISH_DATE DATE
  ,SAVING_PATH  VARCHAR2(4000 CHAR)
  ,URL_PATH  VARCHAR2(4000 CHAR)
  ,ERROR_TEXT CLOB
);


CREATE TABLE ODB.PROD_CONTROL_TC_FILTER 
(
  EMPLOYEE VARCHAR2(10 BYTE) NOT NULL 
  ,TC VARCHAR2(35 CHAR) 
  ,DESCRIPTION VARCHAR2(4000 CHAR) 
  ,ASSIGNED VARCHAR2(4000 CHAR) 
  ,MAIN_SKILL VARCHAR2(1000 CHAR) 
  ,PHASE VARCHAR2(4000 CHAR) 
  ,AREA VARCHAR2(4000 CHAR) 
  ,STATUS VARCHAR2(4000 CHAR) 
  ,FLOWDAY VARCHAR2(4000 CHAR) 
  ,SCHEDULED VARCHAR2(10 CHAR) 
  ,EST_HOURS NUMBER(8, 2) 
  ,ACT_HOURS NUMBER(8, 2) 
  ,NOTES VARCHAR2(1000 CHAR) 
  ,CHAPTER NUMBER(8, 0) 
  ,CPCP VARCHAR2(10 CHAR) 
  ,LAST_MODIFIED_BY VARCHAR2(10 CHAR) 
  ,NDT VARCHAR2(10 CHAR) 
  ,GANTT_FROM NUMBER(8, 0) 
  ,GANTT_TO NUMBER(8, 0) 
  ,CONSTRAINT PROD_CONTROL_TC_FILTER_PK PRIMARY KEY 
  (
    EMPLOYEE 
  )
  ENABLE 
);


CREATE TABLE ODB.FLIGHT_SEAT_ASSIGNMENT 
(	
  ID_FLIGHT NUMBER NOT NULL ENABLE 
  ,ID_PASSENGER NUMBER NOT NULL ENABLE 
  ,MEAL VARCHAR2(20 BYTE) 
  ,NOTES_NUMBER NUMBER 
  ,SEAT_LETTER VARCHAR2(20 BYTE) 
  ,SEAT_NUMBER NUMBER 
  ,CLASS VARCHAR2(20 BYTE) 
  ,CREATED_BY VARCHAR2(20 BYTE) NOT NULL ENABLE 
  ,CREATED_DATE DATE NOT NULL ENABLE 
  ,MODIFIED_BY VARCHAR2(20 BYTE) NOT NULL ENABLE 
  ,MODIFIED_DATE DATE NOT NULL ENABLE 
  ,CONSTRAINT FLIGHT_SEAT_ASSIGNMENT_PK PRIMARY KEY 
  ( 
	ID_FLIGHT, 
	ID_PASSENGER
   )
  ENABLE
);


CREATE TABLE ODB.NR_AUTHORIZATION 
(
  WO NUMBER(8, 0) NOT NULL 
  ,TASK_CARD VARCHAR2(35 CHAR) NOT NULL 
  ,AC VARCHAR2(10 CHAR) NOT NULL 
  ,PN VARCHAR2(35 CHAR) NOT NULL 
  ,PN_SN VARCHAR2(20 CHAR) NOT NULL 
  ,GENERAL_BY VARCHAR2(10 CHAR) 
  ,GENERAL_DATE DATE 
  ,ITEMS_BY VARCHAR2(10 CHAR) 
  ,ITEMS_DATE DATE 
  ,PARTS_BY VARCHAR2(10 CHAR) 
  ,PARTS_DATE DATE 
  ,COST_BY VARCHAR2(10 CHAR) 
  ,COST_DATE DATE 
  ,FINAL_BY VARCHAR2(10 CHAR) 
  ,FINAL_DATE DATE
  ,STATUS VARCHAR2(10 CHAR) 
  ,CREATED_BY VARCHAR2(10 CHAR)
  ,CREATED_DATE DATE
  ,MODIFIED_BY VARCHAR2(10 CHAR)
  ,MODIFIED_DATE DATE
  ,REJECT_REASON VARCHAR2(2000 CHAR)
  ,CONSTRAINT PK_NR_AUTHORIZATION PRIMARY KEY 
  (
    WO 
  , TASK_CARD 
  , AC 
  , PN 
  , PN_SN 
  )
  ENABLE 
);


CREATE TABLE ODB.NR_AUTHORIZATION_AUDIT
(
  WO NUMBER(8, 0) NOT NULL 
  ,TASK_CARD VARCHAR2(35 CHAR) NOT NULL 
  ,AC VARCHAR2(10 CHAR) NOT NULL 
  ,PN VARCHAR2(35 CHAR) NOT NULL 
  ,PN_SN VARCHAR2(20 CHAR) NOT NULL 
  ,GENERAL_BY VARCHAR2(10 CHAR) 
  ,GENERAL_DATE DATE 
  ,ITEMS_BY VARCHAR2(10 CHAR) 
  ,ITEMS_DATE DATE 
  ,PARTS_BY VARCHAR2(10 CHAR) 
  ,PARTS_DATE DATE 
  ,COST_BY VARCHAR2(10 CHAR) 
  ,COST_DATE DATE 
  ,FINAL_BY VARCHAR2(10 CHAR) 
  ,FINAL_DATE DATE
  ,STATUS VARCHAR2(10 CHAR) 
  ,CREATED_BY VARCHAR2(10 CHAR)
  ,CREATED_DATE DATE
  ,MODIFIED_BY VARCHAR2(10 CHAR)
  ,MODIFIED_DATE DATE NOT NULL
  ,REJECT_REASON VARCHAR2(2000 CHAR)
  ,CONSTRAINT PK_NR_AUTHORIZATION_AUDIT PRIMARY KEY 
  (
    WO 
    ,TASK_CARD 
    ,AC 
    ,PN 
    ,PN_SN 
    ,MODIFIED_DATE
  )
  ENABLE 
);


CREATE TABLE ODB.FLIGHT_ASSIGNMENTS
(           
  FLIGHT VARCHAR2(10 CHAR) NOT NULL
  ,EMPLOYEE VARCHAR2(10 CHAR) NOT NULL
  ,CREATED_BY VARCHAR2(10 CHAR)
  ,CREATED_DATE DATE
  ,MODIFIED_BY VARCHAR2(10 CHAR)
  ,MODIFIED_DATE DATE
  ,NOTES NUMBER(16,0)
  ,CONSTRAINT FLIGHT_ASSIGNMENTS_PK PRIMARY KEY 
  (
    FLIGHT
	,EMPLOYEE
   )
  ENABLE
);


CREATE UNIQUE INDEX "ODB"."P_WINDOW_PRINTING_JOBS" ON "ODB"."WINDOW_PRINTING_JOBS" (UNIQUE_ID);

CREATE UNIQUE INDEX "ODB"."P_IOS_PRINTING_JOBS" ON "ODB"."IOS_PRINTING_JOBS" (UNIQUE_ID);

CREATE INDEX "ODB"."I_AC_DETAIL_DUE_DATE" ON "ODB"."AC_CONTROLLER_PANEL_DETAIL" (DEFECT_TYPE ASC, DEFECT_NUMBER ASC, DEFECT_ITEM ASC);


CREATE SEQUENCE "ODB"."SEQ_W_PRINT_JOBS"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE SEQUENCE "ODB"."SEQ_IOS_PRINT_JOBS"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE SEQUENCE  "ODB"."SEQ_WO_PNLTC"  MINVALUE 1000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1001 CACHE 10 ORDER  NOCYCLE;

CREATE SEQUENCE "ODB"."SEQ_IOS_NOT_QUEUE" INCREMENT BY 1 START WITH 100 MAXVALUE 9999999999999999 MINVALUE 100 CYCLE ORDER;

CREATE SEQUENCE "ODB"."SEQ_EMOBILITY_PICKLIST" INCREMENT BY 1 START WITH 1 MAXVALUE 9999999999999999999 MINVALUE 1 NOCACHE;



BEGIN 
  DBMS_AQADM.CREATE_QUEUE_TABLE(QUEUE_TABLE => '"ODB"."WINDOW_PRINTING_JOBS_QT"', QUEUE_PAYLOAD_TYPE => 'sys.aq$_jms_text_message', MULTIPLE_CONSUMERS => FALSE);
END;
/
BEGIN 
  DBMS_AQADM.CREATE_QUEUE_TABLE(QUEUE_TABLE => '"ODB"."IOS_PRINTING_JOBS_QT"', QUEUE_PAYLOAD_TYPE => 'sys.aq$_jms_text_message', MULTIPLE_CONSUMERS => FALSE);
END;
/
BEGIN
  DBMS_AQADM.CREATE_QUEUE(QUEUE_NAME => 'ODB.WINDOW_PRINTING_JOBS_Q', QUEUE_TABLE => 'ODB.WINDOW_PRINTING_JOBS_QT');
END;
/
BEGIN
  DBMS_AQADM.CREATE_QUEUE(QUEUE_NAME => 'ODB.IOS_PRINTING_JOBS_Q', QUEUE_TABLE => 'ODB.IOS_PRINTING_JOBS_QT');
END;
/
BEGIN
  DBMS_AQADM.START_QUEUE (QUEUE_NAME => 'ODB.WINDOW_PRINTING_JOBS_Q', ENQUEUE => TRUE , DEQUEUE => TRUE);
END;
/
BEGIN
  DBMS_AQADM.START_QUEUE (QUEUE_NAME => 'IOS_PRINTING_JOBS_Q', ENQUEUE => TRUE , DEQUEUE => TRUE);
END;
/

-- BEGIN
	-- INSERT INTO ODB.MAIN
	  -- (
		-- TRANSACTION,
		-- CATEGORY,
		-- CATEGORY_TITLE,
		-- WINDOW,
		-- WALL,
		-- BMP,
		-- NOTES,
		-- CREATED_BY,
		-- CREATED_DATE,
		-- MODIFIED_BY,
		-- MODIFIED_DATE,
		-- MAIN_CATEGORY,
		-- SUB_CATEGORY_TITLE,
		-- SUB_ACTIVE,
		-- WINDOWS_APPLICATION,
		-- AC_TYPE_SERIES_CONTROL,
		-- PARAMETER,
		-- WINDOW_TYPE,
		-- WALL_CAPABILITY,
		-- SECONDARY_CATEGORY_TITLE,
		-- ID,
		-- HIDDEN,
		-- HELP_FILE,
		-- WEBENABLED
	  -- )
	  -- VALUES
	  -- (
		-- 1005,
		-- 'DETAIL',
		-- 'Update Part Drop Dead',
		-- 'main.update_drop_dead',
		-- NULL,
		-- NULL,
		-- NULL,
		-- 'TRAXIFACE',
		-- SYSDATE,
		-- 'TRAXIFACE',
		-- SYSDATE,
		-- 'UPDATE',
		-- '                                                                                                                                                                                                        '
		-- ,
		-- NULL,
		-- 'NO',
		-- NULL,
		-- NULL,
		-- NULL,
		-- 'NO',
		-- NULL,
		-- '0027.0009.0000.0000',
		-- NULL,
		-- NULL,
		-- NULL
	  -- );
	  
	  -- COMMIT;
-- END;
-- /
BEGIN
	INSERT INTO ODB.SYSTEM_TRAN (
				SYSTEM_TRANSACTION,
				SYSTEM_TRANSACTION_DESCRIPTION,
				SYSTEM,
				NOTES,
				CREATED_BY,
				CREATED_DATE,
				MODIFIED_BY,
				MODIFIED_DATE,
				MODULE,
				MODULE_ICON,
				FIELD_LENGTH,
				SYSTEM_TRAN_LONG_DESCRIPTION,
				AUTHORIZATION,
				NOTIFICATION,
				EXAMPLES,
				EXAMPLE_WINDOW,
				EXAMPLE_WINDOW_NAME,
				REQUIRED_CODES,
				CHARACTERS_TO_OMIT
			) VALUES (
				'DOCTYPE',
				'Document Type',
				NULL,
				NULL,
				'ADM',
				SYSDATE,
				'ADM',
				SYSDATE,
				'Setting',
				'settings.bmp',
				10,
				NULL,
				NULL,
				NULL,
				NULL,
				NULL,
				NULL,
				NULL,
				NULL
			);
			
			COMMIT;
END;
/
BEGIN
	-- deletes all defect_report_MIS orphan records 458 AS OF Aug 6, 2019
	DELETE
	FROM ODB.DEFECT_REPORT_MIS mis
	WHERE NOT EXISTS
	  (SELECT 1
	   FROM ODB.DEFECT_REPORT dr
	   WHERE dr.defect    = mis.defect
	         AND dr.defect_type = mis.defect_type
	         AND dr.defect_item = mis.defect_item
	  ); 
	  
	COMMIT;  
END;
/

--adding foreign key to the table since when deleting a defect from Trax it will not delete the MIS.  
ALTER TABLE ODB.DEFECT_REPORT_MIS
ADD CONSTRAINT FK_DEFECT_REPORT_MIS FOREIGN KEY
(
  DEFECT_TYPE 
, DEFECT 
, DEFECT_ITEM 
)
REFERENCES ODB.DEFECT_REPORT
(
  DEFECT_TYPE 
, DEFECT 
, DEFECT_ITEM 
)
ON DELETE CASCADE ENABLE;





