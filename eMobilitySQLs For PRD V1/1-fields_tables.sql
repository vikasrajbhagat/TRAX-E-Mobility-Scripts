--Fields and tables for eMobility



alter table wo_task_card add (VERIFIED                               VARCHAR2(10 CHAR)   );
alter table wo_task_card add (VERIFIED_BY                               VARCHAR2(10 CHAR)   );
alter table wo_task_card add (VERIFIED_DATE                             DATE  );


alter table defect_report add (CABIN_PART_ID number) ; 

alter table task_card add (CREATE_NR VARCHAR2(10 CHAR));

alter table TRAX_GLOBAL_FILES add (IOS_CONNECTOR_SERVER VARCHAR2(250 CHAR)) ; 


alter table DEFECT_REPORT_PN add (PICKLIST_PROCESSED                   VARCHAR2(10 CHAR)  ) ;
alter table DEFECT_REPORT_PN add (QTY_RESERVED                         NUMBER(8,2));


ALTER TABLE TASK_CARD_EMPLOYEE_ASSIGNED 
ADD (SYNC VARCHAR2(10 CHAR) );

ALTER TABLE TASK_CARD_EMPLOYEE_ASSIGNED ADD (SYNC_DATE DATE );


ALTER TABLE INTELLI_FORM_DETAIL
ADD  (GRID_POS_Z NUMBER(4,0) );
                
ALTER TABLE INTELLI_FORM_DETAIL
ADD (INTERFACE_EXTERNAL_REFERENCE VARCHAR2(400 BYTE))  ;


-- new cabin configuration

CREATE TABLE AC_TYPE_CONFIGURATION 
(
  AC_TYPE VARCHAR2(10 CHAR) NOT NULL 
, AC_SERIES VARCHAR2(10 CHAR) NOT NULL 
, LINE NUMBER(8, 0) NOT NULL 
, CONFIG VARCHAR2(500 CHAR) 
, ROW_LENGTH NUMBER(8, 0) 
, SECTION NUMBER(8, 0) NOT NULL 
, FLOOR NUMBER(8, 0) NOT NULL 
, CREATED_BY VARCHAR2(10 CHAR) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 CHAR) 
, MODIFIED_DATE DATE 
, NOTES NUMBER(8, 0) 
, CONSTRAINT AC_TYPE_CONFIGURATION_PK PRIMARY KEY 
  (
    AC_TYPE 
  , AC_SERIES 
  , LINE 
  , FLOOR 
  , SECTION 
  )
  ENABLE 
);


CREATE TABLE AC_SEAT_CONFIG 
(
  AC VARCHAR2(10 CHAR) NOT NULL 
, LINE NUMBER(8, 0) NOT NULL 
, CONFIG VARCHAR2(500 CHAR) 
, ROW_LENGTH NUMBER(8, 0) 
, SECTION NUMBER(8, 0) NOT NULL 
, FLOOR NUMBER(8, 0) NOT NULL 
, CREATED_BY VARCHAR2(10 CHAR) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 CHAR) 
, MODIFIED_DATE DATE 
, NOTES NUMBER(8, 0) 
, CONSTRAINT PK_AC_SEAT_CONFIG PRIMARY KEY 
  (
    AC 
  , LINE 
  , FLOOR 
  , SECTION 
  )
  ENABLE 
);


CREATE TABLE DEFECT_SEAT 
(
  AC VARCHAR2(10 CHAR) NOT NULL 
, SEAT_NO NUMBER(8, 0) NOT NULL 
, CONFIG VARCHAR2(500 CHAR) 
, ROW_LENGTH NUMBER(8, 0) 
, SECTION NUMBER(8, 0) NOT NULL 
, FLOOR NUMBER(8, 0) NOT NULL 
, DEFECT_TYPE VARCHAR2(8 CHAR) NOT NULL
, DEFECT VARCHAR2(12 CHAR) NOT NULL
, DEFECT_ITEM NUMBER(4) NOT NULL
, CREATED_BY VARCHAR2(10 CHAR) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 CHAR) 
, MODIFIED_DATE DATE 
, NOTES NUMBER(8, 0) 
, CONSTRAINT PK_DEFECT_SEAT PRIMARY KEY 
  (
    AC 
  , SEAT_NO 
  , FLOOR 
  , SECTION 
  , DEFECT_TYPE
  , DEFECT
  , DEFECT_ITEM
  )
  ENABLE 
);

ALTER TABLE DEFECT_SEAT 
DROP CONSTRAINT PK_DEFECT_SEAT;

ALTER TABLE DEFECT_SEAT 
ADD (ROW_NO NUMBER(8, 0) NOT NULL);

ALTER TABLE DEFECT_SEAT 
ADD (STATUS VARCHAR2(10 CHAR) );

ALTER TABLE DEFECT_SEAT
ADD CONSTRAINT PK_DEFECT_SEAT PRIMARY KEY 
(
  AC 
, SEAT_NO 
, FLOOR 
, SECTION 
, DEFECT_TYPE 
, DEFECT 
, DEFECT_ITEM 
, ROW_NO 
)
ENABLE;

ALTER TABLE DEFECT_SEAT 
ADD (RECORD_TYPE VARCHAR2(10 CHAR) NOT NULL);

CREATE TABLE AC_AREA_ATA 
(
  AREA_ID NUMBER(16, 0) NOT NULL 
, AREA_TYPE VARCHAR2(10 CHAR) 
, DESCRIPTION VARCHAR2(200 CHAR) 
, PN VARCHAR2(35 CHAR) 
, PARENT_ID NUMBER(16, 0) 
, CHAPTER NUMBER(2, 0) 
, SECTION NUMBER(2, 0) 
, PARAGRAPH NUMBER(2, 0) 
, CREATED_BY VARCHAR2(10 CHAR) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 CHAR) 
, MODIFIED_DATE DATE 
, NOTES NUMBER 
, MEL_NUMBER VARCHAR2(16 CHAR) 
, MEL_SUB VARCHAR2(3 CHAR) 
, INOP VARCHAR2(10 CHAR) 
, CONSTRAINT AC_AREA_ATA_PK PRIMARY KEY 
  (
    AREA_ID 
  )  
  ENABLE 
) ;

CREATE TABLE EMPLOYEE_ASSIGNMENTS 
(
  EMPLOYEE VARCHAR2(10 CHAR) NOT NULL 
, AC_LIST VARCHAR2(4000 CHAR) 
, LOCATION_LIST VARCHAR2(4000 CHAR) 
, GATE_LIST VARCHAR2(4000 CHAR) 
, CREATED_BY VARCHAR2(10 CHAR) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 CHAR) 
, MODIFIED_DATE DATE 
, NOTES NUMBER(8, 0) 
, CONSTRAINT EMPLOYEE_ASSIGNMENTS_PK PRIMARY KEY 
  (
    EMPLOYEE 
  )
  ENABLE 
);

CREATE TABLE "FLIGHTS_EMPLOYEE" 
   (	"ID_EMPLOYEE" VARCHAR2(50 CHAR), 
	"ID_FLIGHT" NUMBER, 
	"CREATED_BY" VARCHAR2(10 BYTE), 
	"CREATED_DATE" DATE, 
	"MODIFIED_BY" VARCHAR2(10 BYTE), 
	"MODIFIED_DATE" DATE
   ) ;


CREATE TABLE PRINTING_JOBS
(
UNIQUE_ID NUMBER(16,0), 
OBJECT_NAME  VARCHAR(50 CHAR),
JOB_TITLE  VARCHAR(100 CHAR),
OPTIONS_VALUES  CLOB,
PARAMETERS_VALUES CLOB,
STATUS   VARCHAR(15 CHAR),
SEND_DATE  DATE,
SEND_USER VARCHAR2(10 CHAR), 
START_DATE  DATE,
FINISH_DATE DATE,
SAVING_PATH  VARCHAR(300 CHAR),
INFO_TEXT CLOB, 
ERROR_TEXT CLOB,
PROGRESS_TEXT CLOB,
COMPLETED_PRINTS     NUMBER(8,0),
TOTAL_PRINTS NUMBER(8,0),
PRINTED_DATE DATE ,             
PRINTED_BY   VARCHAR2(10 CHAR)  , 
EMAILED_DATE DATE ,
EMAILED_BY   VARCHAR2(10 CHAR) 

);
alter table stylesheet_content add (ITEM_CLOB_CONTENT clob) ; 
alter table PRINTING_JOBS add (RETRIEVED_DATE DATE,RETRIEVED_BY VARCHAR2(10 CHAR));

/

CREATE UNIQUE INDEX P_PRINTING_JOBS ON PRINTING_JOBS (UNIQUE_ID) ;
/
CREATE SEQUENCE  "SEQ_PRINT_JOBS"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
/
begin 
  dbms_aqadm.create_queue_table(queue_table => 'PRINTING_JOBS_QT', queue_payload_type => 'sys.aq$_jms_text_message', multiple_consumers => false);
end;
/
begin
  dbms_aqadm.create_queue(queue_name => 'PRINTING_JOBS_Q', queue_table => 'PRINTING_JOBS_QT');
end;
/
begin
  dbms_aqadm.start_queue (queue_name => 'PRINTING_JOBS_Q', enqueue => TRUE , dequeue => TRUE);
end;

/

ALTER TABLE STYLESHEET_CONTENT  
MODIFY (TASK_CARD NULL);
ALTER TABLE STYLESHEET_CONTENT  
MODIFY (TASK_CARD_ITEM NULL);
ALTER TABLE STYLESHEET_CONTENT  
MODIFY (TASK_CARD_TYPE NULL);
/
alter table printing_jobs add( host_name varchar2(50 char))
/



CREATE TABLE WINDOW_PRINTING_JOBS
(
UNIQUE_ID NUMBER(16,0), 
PRINT_WINDOW  VARCHAR2(100 CHAR),
SELECTED_PRINT  VARCHAR2(100 CHAR),
PRINT_TITLE  VARCHAR2(1000 CHAR),
COMPARISON_OPERATOR VARCHAR2(10 CHAR),
PRINT_PARAMETERS CLOB,
OBJECT_PARAMETERS BLOB,
PRINT_STATUS   VARCHAR2(15 CHAR),
TRAX_USER VARCHAR2(10 CHAR), 
CREATED_DATE  DATE,
START_DATE  DATE,
FINISH_DATE DATE,
SAVING_PATH  VARCHAR2(4000 CHAR),
URL_PATH  VARCHAR2(4000 CHAR),
ERROR_TEXT CLOB
);

/



CREATE UNIQUE INDEX P_WINDOW_PRINTING_JOBS ON WINDOW_PRINTING_JOBS (UNIQUE_ID) ;
/
CREATE SEQUENCE  "SEQ_W_PRINT_JOBS"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
/
begin 
  dbms_aqadm.create_queue_table(queue_table => 'WINDOW_PRINTING_JOBS_QT', queue_payload_type => 'sys.aq$_jms_text_message', multiple_consumers => false);
end;
/
begin
  dbms_aqadm.create_queue(queue_name => 'WINDOW_PRINTING_JOBS_Q', queue_table => 'WINDOW_PRINTING_JOBS_QT');
end;
/
begin
  dbms_aqadm.start_queue (queue_name => 'WINDOW_PRINTING_JOBS_Q', enqueue => TRUE , dequeue => TRUE);
end;


/
alter table DEFECT_REPORT add (IOS_SYNC DATE) ;

-- Line Control Employee Aircraft Assignments.

CREATE TABLE AC_ASSIGNMENTS 
(
  WO NUMBER(8) NOT NULL 
, EMPLOYEE VARCHAR2(10 CHAR) NOT NULL 
, CREATED_BY VARCHAR2(10 CHAR) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 CHAR) 
, MODIFIED_DATE DATE 
, NOTES NUMBER(16) 
, CONSTRAINT AC_ASSIGNMENTS_PK PRIMARY KEY 
  (
    WO 
  , EMPLOYEE 
  )
  ENABLE 
);


CREATE TABLE IOS_NOTIFICATION_QUEUE 
(
  ID NUMBER(16) NOT NULL 
, MESSAGE_TYPE VARCHAR2(50) NOT NULL 
, CONTENT_DATA VARCHAR2(4000) NOT NULL 
, CREATE_DATE DATE NOT NULL 
, SYNC_DATE DATE 
, CONSTRAINT IOS_NOTIFICATION_QUEUE_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

/
CREATE SEQUENCE SEQ_IOS_NOT_QUEUE INCREMENT BY 1 START WITH 100 MAXVALUE 9999999999999999 MINVALUE 100 CYCLE ORDER;

/
CREATE SEQUENCE SEQ_EMOBILITY_PICKLIST INCREMENT BY 1 START WITH 1 MAXVALUE 9999999999999999999 MINVALUE 1 NOCACHE;
/

CREATE TABLE EMOBILITY_PICKLIST_QUEUE 
(
  TANSACTION_ID NUMBER(16, 0) NOT NULL 
, PN VARCHAR2(35 CHAR) NOT NULL 
, QTY NUMBER(8, 2) 
, BATCH_NO NUMBER(8, 0) 
, SN VARCHAR2(20 CHAR) 
, CONSTRAINT EMOBILITY_PICKLIST_QUEUE_PK PRIMARY KEY 
  (
    TANSACTION_ID 
  , PN 
  )
);



ALTER TABLE TASK_CARD_EMPLOYEE_ASSIGNED 
ADD (INSPECTION_FLAG VARCHAR2(10 CHAR) );


-- Line Control 11-13-2017 DELIVERY

CREATE TABLE GROUP_ASSIGN 
(
  GROUP_ID VARCHAR2(20 CHAR) NOT NULL 
, DESCRIPTION VARCHAR2(100 CHAR) 
, CREATED_BY VARCHAR2(10 CHAR) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 CHAR) 
, MODIFIED_DATE DATE 
, CONSTRAINT GROUP_EMPLOYEE_PK PRIMARY KEY 
  (
    GROUP_ID 
  )
  ENABLE 
);


CREATE TABLE GROUP_EMPLOYEE 
(
  GROUP_ID VARCHAR2(20 CHAR) NOT NULL 
, EMPLOYEE VARCHAR2(10 CHAR) NOT NULL 
, CREATED_BY VARCHAR2(10 CHAR) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 CHAR) 
, MODIFIED_DATE DATE 
, CONSTRAINT PK_GROUP_EMPLOYEE PRIMARY KEY 
  (
    GROUP_ID 
  , EMPLOYEE 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX GROUP_EMPLOYEE_PK1 ON GROUP_EMPLOYEE (GROUP_ID ASC, EMPLOYEE ASC) 
  )
  ENABLE 
);

ALTER TABLE GROUP_EMPLOYEE
ADD CONSTRAINT FK_GROUP_EMPLOYEE FOREIGN KEY
(
  GROUP_ID 
)
REFERENCES GROUP_ASSIGN
(
  GROUP_ID 
)
ENABLE;

ALTER TABLE GROUP_ASSIGN 
ADD (LOCATION VARCHAR2(10 CHAR) );

CREATE TABLE GROUP_ASSIGN_FLIGHT 
(
  GROUP_ID VARCHAR2(20 CHAR) NOT NULL 
, WO NUMBER(8, 0) NOT NULL 
, CONSTRAINT GROUP_ASSIGN_FLIGHT_PK PRIMARY KEY 
  (
    GROUP_ID 
  , WO 
  )
  ENABLE 
);

ALTER TABLE GROUP_ASSIGN_FLIGHT 
DROP CONSTRAINT GROUP_ASSIGN_FLIGHT_PK;

ALTER TABLE GROUP_ASSIGN_FLIGHT 
ADD (FLIGHT VARCHAR2(20 CHAR) NOT NULL);

ALTER TABLE GROUP_ASSIGN_FLIGHT
ADD CONSTRAINT GROUP_ASSIGN_FLIGHT_PK PRIMARY KEY 
(
  GROUP_ID 
, FLIGHT 
)
ENABLE;

alter table defect_report add (CABIN_POSITION VARCHAR2(20 CHAR) );

-- NEW TABLE PROD_CONTROL PART PAGE FILTERS

CREATE TABLE PROD_CONTROL_PART_FILTER 
(
  EMPLOYEE VARCHAR2(10) NOT NULL 
, ROB VARCHAR2(10 CHAR) 
, CATEGORY VARCHAR2(10 CHAR) 
, SUB_CATEGORY VARCHAR2(1000 CHAR) 
, PN VARCHAR2(35 CHAR) 
, DESCRIPTION VARCHAR2(1000 CHAR) 
, QTY NUMBER(8, 2) 
, CREATED_DATE DATE 
, CREATED_BY VARCHAR2(10 CHAR) 
, TASK VARCHAR2(35 CHAR) 
, TASK_STATUS VARCHAR2(1000 CHAR) 
, REQPICK VARCHAR2(100 CHAR) 
, ACTIONED_BY VARCHAR2(10 CHAR) 
, VENDOR VARCHAR2(10 CHAR) 
, SHIP_VIA VARCHAR2(1000 CHAR) 
, AWB VARCHAR2(1000 CHAR) 
, NOTES VARCHAR2(1000 CHAR) 
, DELY_DATE DATE 
, ACT_DATE DATE 
, REQPL_STATUS VARCHAR2(1000 CHAR) 
, CONSTRAINT PROD_CONTROL_PART_FILTER_PK PRIMARY KEY 
  (
    EMPLOYEE 
  )
  ENABLE 
);

alter table defect_report_audit add  (EMOBILITY_DEFERRED_BY VARCHAR2(10 CHAR)) ;
alter table defect_report_audit add  (EMOBILITY_CLOSED_BY VARCHAR2(10 CHAR)) ;


alter table MAIN add  (WEBENABLED                        VARCHAR2(10)  ) ;



CREATE TABLE WIP_AUDIT
(
  WO NUMBER(8, 0) NOT NULL 
, TASK_CARD VARCHAR2(35 CHAR) NOT NULL 
, TASK_CARD_ITEM NUMBER(5, 0) NOT NULL 
, CATEGORY VARCHAR2(10 BYTE) 
, SKILL VARCHAR2(10 BYTE) NOT NULL 
, EMPLOYEE VARCHAR2(10 BYTE) NOT NULL 
, PASSWORD VARCHAR2(260 BYTE) 
, "SELECT" VARCHAR2(1 BYTE) 
, START_DATE DATE 
, START_TIME DATE 
, NOTES NUMBER(8, 0) 
, CREATED_BY VARCHAR2(10 BYTE) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 BYTE) 
, MODIFIED_DATE DATE 
, TASK_CARD_PN VARCHAR2(35 CHAR) NOT NULL 
, TASK_CARD_PN_SN VARCHAR2(20 BYTE) NOT NULL 
, AC VARCHAR2(10 BYTE) NOT NULL 
, PASSWORD_CLOSED VARCHAR2(260 CHAR) 
, SIGN_IN_TYPE VARCHAR2(10 BYTE) 
, SIGN_IN_GROUP NUMBER(8, 0) 
, STATUS VARCHAR2(10 CHAR) 
, REASON VARCHAR2(500 CHAR)
, CONSTRAINT PK_WIP_AUDIT PRIMARY KEY 
  (
    WO 
  , TASK_CARD 
  , EMPLOYEE 
  , AC 
  , TASK_CARD_PN 
  , TASK_CARD_PN_SN 
  , TASK_CARD_ITEM 
  , SKILL 
  , CREATED_DATE
  )
 );

/

INSERT
INTO
  MAIN
  (
    TRANSACTION,
    CATEGORY,
    CATEGORY_TITLE,
    WINDOW,
    WALL,
    BMP,
    NOTES,
    CREATED_BY,
    CREATED_DATE,
    MODIFIED_BY,
    MODIFIED_DATE,
    MAIN_CATEGORY,
    SUB_CATEGORY_TITLE,
    SUB_ACTIVE,
    WINDOWS_APPLICATION,
    AC_TYPE_SERIES_CONTROL,
    PARAMETER,
    WINDOW_TYPE,
    WALL_CAPABILITY,
    SECONDARY_CATEGORY_TITLE,
    ID,
    HIDDEN,
    HELP_FILE,
    WEBENABLED
  )
  VALUES
  (
    1005,
    'DETAIL',
    'Update Part Drop Dead',
    'main.update_drop_dead',
    NULL,
    NULL,
    NULL,
    'TRAXIFACE',
    SYSDATE,
    'TRAXIFACE',
    SYSDATE,
    'UPDATE',
    '                                                                                                                                                                                                        '
    ,
    NULL,
    'NO',
    NULL,
    NULL,
    NULL,
    'NO',
    NULL,
    '0027.0009.0000.0000',
    NULL,
    NULL,
    NULL
  );
      
  
COMMIT;


alter table traxdoc add ( AERODOX_FLAG VARCHAR2(10 char) );

alter table DEFECT_REPORT_TROUBLE_SHOOTING add (REQUIRED_INSPECTION_DATE DATE) ; 

CREATE TABLE LOCATION_CAPACITY_BOARD 
(
  LOCATION VARCHAR2(10 CHAR) NOT NULL 
, AC VARCHAR2(10 CHAR) NOT NULL 
, SITE VARCHAR2(10 CHAR) NOT NULL 
, START_DATE DATE NOT NULL 
, END_DATE DATE 
, TOP NUMBER(8) 
, LEFT NUMBER(8) 
, CREATED_BY VARCHAR2(10 CHAR) 
, CREATED_DATE DATE 
, MODIFIED_BY VARCHAR2(10 CHAR) 
, MODIFIED_DATE DATE 
, NOTES NUMBER(8) 
, BLOB_NO NUMBER(8) 
, CONSTRAINT LOCATION_CAPACITY_BOARD_PK PRIMARY KEY 
  (
    LOCATION 
  , AC 
  , SITE 
  , START_DATE 
  )
  ENABLE 
);

ALTER TABLE LOCATION_CAPACITY_BOARD 
ADD (IMAGE VARCHAR2(100 CHAR) );

ALTER TABLE LOCATION_CAPACITY_BOARD 
ADD (WEIGHT NUMBER(8) );

ALTER TABLE LOCATION_MASTER
ADD (BLOB_NO NUMBER );

ALTER TABLE AC_TYPE_SERIES_MASTER 
ADD (WEIGHT NUMBER(8) );

-- Index for Line Control Defects speed.
CREATE INDEX I_AC_DETAIL_DUE_DATE ON AC_CONTROLLER_PANEL_DETAIL (DEFECT_TYPE ASC, DEFECT_NUMBER ASC, DEFECT_ITEM ASC);


-- New geo_location table

CREATE TABLE EMOBILITY_GEO_LOC 
(
  EMPLOYEE VARCHAR2(10) NOT NULL 
, LOGIN_DATE DATE 
, APP VARCHAR2(20) 
, LONGITUDE NUMBER(16, 8) 
, LATITUDE NUMBER(16, 8) 
, CONSTRAINT EMOBILITY_GEO_LOC_PK PRIMARY KEY 
  (
    EMPLOYEE 
  )
  ENABLE 
);


CREATE TABLE AIRPORT_CODES 
(
  ICAO VARCHAR2(4 CHAR) NOT NULL 
, IATA VARCHAR2(3 CHAR) 
, NAME VARCHAR2(2000 CHAR) 
, CITY VARCHAR2(2000 CHAR) 
, COUNTRY VARCHAR2(2000 CHAR) 
, LAT_DEG NUMBER 
, LAT_MIN NUMBER 
, LAT_SEC NUMBER 
, LAT_DIR VARCHAR2(10 CHAR) 
, LONG_DEG NUMBER 
, LONG_MIN NUMBER 
, LONG_SEC NUMBER 
, LONG_DIR VARCHAR2(10 CHAR) 
, ALTITUDE NUMBER 
, LATITUDE NUMBER(16, 6) 
, LONGITUDE NUMBER(16, 6) 
, CONSTRAINT AIRPORT_CODES_PK PRIMARY KEY 
  (
    ICAO 
  )
  
  ENABLE 
) 
;



CREATE TABLE FLIGHT_CRS 
(
  EMPLOYEE VARCHAR2(10 CHAR) NOT NULL 
, MECH_CRS_DATE DATE 
, PILOT_CRS_DATE DATE 
, FLIGHT VARCHAR2(10 CHAR) NOT NULL 
, ORIGINAL_SCHEDULED_DATE DATE NOT NULL 
, AC VARCHAR2(10 CHAR) NOT NULL 
, ORIGIN VARCHAR2(10 CHAR) NOT NULL 
, DESTINATION VARCHAR2(10 CHAR) NOT NULL 
, CONSTRAINT FLIGHT_CRS_PK PRIMARY KEY 
  (
    EMPLOYEE 
  , FLIGHT 
  , ORIGINAL_SCHEDULED_DATE 
  , AC 
  , ORIGIN 
  , DESTINATION 
  )
  
  ENABLE 
) ;

ALTER TABLE EMOBILITY_GEO_LOC  
MODIFY (LONGITUDE NUMBER(20, 12) );

ALTER TABLE EMOBILITY_GEO_LOC  
MODIFY (LATITUDE NUMBER(20, 12) );



CREATE TABLE IOS_PRINTING_JOBS
(
UNIQUE_ID NUMBER(16,0), 
PRINT_WINDOW  VARCHAR2(100 CHAR),
SELECTED_PRINT  VARCHAR2(100 CHAR),
PRINT_TITLE  VARCHAR2(1000 CHAR),
COMPARISON_OPERATOR VARCHAR2(10 CHAR),
PRINT_PARAMETERS CLOB,
OBJECT_PARAMETERS BLOB,
PRINT_STATUS   VARCHAR2(15 CHAR),
TRAX_USER VARCHAR2(10 CHAR), 
CREATED_DATE  DATE,
START_DATE  DATE,
FINISH_DATE DATE,
SAVING_PATH  VARCHAR2(4000 CHAR),
URL_PATH  VARCHAR2(4000 CHAR),
ERROR_TEXT CLOB
);

/



CREATE UNIQUE INDEX P_IOS_PRINTING_JOBS ON IOS_PRINTING_JOBS (UNIQUE_ID) ;
/
CREATE SEQUENCE  "SEQ_IOS_PRINT_JOBS"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
/
begin 
  dbms_aqadm.create_queue_table(queue_table => 'IOS_PRINTING_JOBS_QT', queue_payload_type => 'sys.aq$_jms_text_message', multiple_consumers => false);
end;
/
begin
  dbms_aqadm.create_queue(queue_name => 'IOS_PRINTING_JOBS_Q', queue_table => 'IOS_PRINTING_JOBS_QT');
end;
/
begin
  dbms_aqadm.start_queue (queue_name => 'IOS_PRINTING_JOBS_Q', enqueue => TRUE , dequeue => TRUE);
end;

/

CREATE TABLE PROD_CONTROL_TC_FILTER 
(
  EMPLOYEE VARCHAR2(10 BYTE) NOT NULL 
, TC VARCHAR2(35 CHAR) 
, DESCRIPTION VARCHAR2(4000 CHAR) 
, ASSIGNED VARCHAR2(4000 CHAR) 
, MAIN_SKILL VARCHAR2(1000 CHAR) 
, PHASE VARCHAR2(4000 CHAR) 
, AREA VARCHAR2(4000 CHAR) 
, STATUS VARCHAR2(4000 CHAR) 
, FLOWDAY VARCHAR2(4000 CHAR) 
, SCHEDULED VARCHAR2(10 CHAR) 
, EST_HOURS NUMBER(8, 2) 
, ACT_HOURS NUMBER(8, 2) 
, NOTES VARCHAR2(1000 CHAR) 
, CHAPTER NUMBER(8, 0) 
, CPCP VARCHAR2(10 CHAR) 
, LAST_MODIFIED_BY VARCHAR2(10 CHAR) 
, NDT VARCHAR2(10 CHAR) 
, GANTT_FROM NUMBER(8, 0) 
, GANTT_TO NUMBER(8, 0) 
, CONSTRAINT PROD_CONTROL_TC_FILTER_PK PRIMARY KEY 
  (
    EMPLOYEE 
  )
 
  ENABLE 
) 
;


ALTER TABLE PHASE_TEMPLATE_DETAIL 
ADD (DURATION NUMBER(8, 0) );

ALTER TABLE WO_TEMPLATE_DETAIL 
ADD (DURATION NUMBER(8, 0) );


--deletes all defect_report_MIS orphan records
DELETE
FROM DEFECT_REPORT_MIS mis
WHERE NOT EXISTS
  (SELECT 1
  FROM DEFECT_REPORT dr
  WHERE dr.defect    = mis.defect
  AND dr.defect_type = mis.defect_type
  AND dr.defect_item = mis.defect_item
  ) ; 
commit ;  

--adding foreing key to the table since when deleting a defect from Trax it will not delete the MIS.  
ALTER TABLE DEFECT_REPORT_MIS
ADD CONSTRAINT FK_DEFECT_REPORT_MIS FOREIGN KEY
(
  DEFECT_TYPE 
, DEFECT 
, DEFECT_ITEM 
)
REFERENCES DEFECT_REPORT
(
  DEFECT_TYPE 
, DEFECT 
, DEFECT_ITEM 
)
ON DELETE CASCADE ENABLE;

alter table PN_INVENTORY_DETAIL add  (RFID_EPC VARCHAR2(30 CHAR)) ;


  CREATE TABLE "FLIGHT_SEAT_ASSIGNMENT" 
   (	"ID_FLIGHT" NUMBER NOT NULL ENABLE, 
	"ID_PASSENGER" NUMBER NOT NULL ENABLE, 
	"MEAL" VARCHAR2(20 BYTE), 
	"NOTES_NUMBER" NUMBER, 
	"SEAT_LETTER" VARCHAR2(20 BYTE), 
	"SEAT_NUMBER" NUMBER, 
	"CLASS" VARCHAR2(20 BYTE), 
	"CREATED_BY" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"CREATED_DATE" DATE NOT NULL ENABLE, 
	"MODIFIED_BY" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"MODIFIED_DATE" DATE NOT NULL ENABLE, 
	 CONSTRAINT "FLIGHT_SEAT_ASSIGNMENT_PK" PRIMARY KEY ("ID_FLIGHT", "ID_PASSENGER")
 ENABLE
   ) ;



ALTER TABLE PROFILE_MASTER 
ADD (BLOB_NO NUMBER(8, 0) );



ALTER TABLE WO_TASK_CARD 
ADD (EXCLUDE_CONTRACT VARCHAR2(10 CHAR) );

ALTER TABLE WO_TASK_CARD_ADUIT
ADD (EXCLUDE_CONTRACT VARCHAR2(10 CHAR) );

CREATE TABLE NR_AUTHORIZATION 
(
  WO NUMBER(8, 0) NOT NULL 
, TASK_CARD VARCHAR2(35 CHAR) NOT NULL 
, AC VARCHAR2(10 CHAR) NOT NULL 
, PN VARCHAR2(35 CHAR) NOT NULL 
, PN_SN VARCHAR2(20 CHAR) NOT NULL 
, GENERAL_BY VARCHAR2(10 CHAR) 
, GENERAL_DATE DATE 
, ITEMS_BY VARCHAR2(10 CHAR) 
, ITEMS_DATE DATE 
, PARTS_BY VARCHAR2(10 CHAR) 
, PARTS_DATE DATE 
, COST_BY VARCHAR2(10 CHAR) 
, COST_DATE DATE 
, FINAL_BY VARCHAR2(10 CHAR) 
, FINAL_DATE DATE
, STATUS VARCHAR2(10 CHAR) 
, CREATED_BY VARCHAR2(10 CHAR)
, CREATED_DATE DATE
, MODIFIED_BY VARCHAR2(10 CHAR)
, MODIFIED_DATE DATE
, REJECT_REASON VARCHAR2(2000 CHAR)
, CONSTRAINT PK_NR_AUTHORIZATION PRIMARY KEY 
  (
    WO 
  , TASK_CARD 
  , AC 
  , PN 
  , PN_SN 
  )
  ENABLE 
);


CREATE TABLE NR_AUTHORIZATION_AUDIT
(
  WO NUMBER(8, 0) NOT NULL 
, TASK_CARD VARCHAR2(35 CHAR) NOT NULL 
, AC VARCHAR2(10 CHAR) NOT NULL 
, PN VARCHAR2(35 CHAR) NOT NULL 
, PN_SN VARCHAR2(20 CHAR) NOT NULL 
, GENERAL_BY VARCHAR2(10 CHAR) 
, GENERAL_DATE DATE 
, ITEMS_BY VARCHAR2(10 CHAR) 
, ITEMS_DATE DATE 
, PARTS_BY VARCHAR2(10 CHAR) 
, PARTS_DATE DATE 
, COST_BY VARCHAR2(10 CHAR) 
, COST_DATE DATE 
, FINAL_BY VARCHAR2(10 CHAR) 
, FINAL_DATE DATE
, STATUS VARCHAR2(10 CHAR) 
, CREATED_BY VARCHAR2(10 CHAR)
, CREATED_DATE DATE
, MODIFIED_BY VARCHAR2(10 CHAR)
, MODIFIED_DATE DATE NOT NULL
, REJECT_REASON VARCHAR2(2000 CHAR)
, CONSTRAINT PK_NR_AUTHORIZATION_AUDIT PRIMARY KEY 
  (
    WO 
  , TASK_CARD 
  , AC 
  , PN 
  , PN_SN 
  , MODIFIED_DATE
  )
  ENABLE 
);


ALTER TABLE WO_TASK_CARD
ADD (EXCLUDE_TYPE VARCHAR2(45 CHAR));

ALTER TABLE WO_TASK_CARD ADD (
    HOURS                    NUMBER(10,2),
    COST                     NUMBER(16,2),
    COST_MATERIAL            NUMBER(16,2),
    SELL_LABOR_CURRENCY      NUMBER(16,2),
    SELL_MATERIAL_CURRENCY   NUMBER(16,2),
    REMARKS                  VARCHAR2(4000 CHAR)
);

ALTER TABLE WO_TASK_CARD_ADUIT ADD (
    HOURS                    NUMBER(10,2),
    COST                     NUMBER(16,2),
    COST_MATERIAL            NUMBER(16,2),
    SELL_LABOR_CURRENCY      NUMBER(16,2),
    SELL_MATERIAL_CURRENCY   NUMBER(16,2),
    REMARKS                  VARCHAR2(4000 CHAR)
);

ALTER TABLE WO_TASK_CARD_ITEM
ADD (NR_TC_REFERENCE                       VARCHAR2(35 CHAR) );

ALTER TABLE BLOB_TABLE 
ADD (DOC_TYPE VARCHAR2(100 CHAR) );

INSERT INTO system_tran (
    system_transaction,
    system_transaction_description,
    system,
    notes,
    created_by,
    created_date,
    modified_by,
    modified_date,
    module,
    module_icon,
    field_length,
    system_tran_long_description,
    authorization,
    notification,
    examples,
    example_window,
    example_window_name,
    required_codes,
    characters_to_omit
) VALUES (
    'DOCTYPE',
    'Document Type',
    NULL,
    NULL,
    'ADM',
    SYSDATE,
    'ADM',
    SYSDATE,
    'Setting',
    'settings.bmp',
    10,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
);



ALTER TABLE PROD_CONTROL_PART_FILTER 
ADD (QA_KEYWORDS VARCHAR2(4000 CHAR) );


ALTER TABLE SYSTEM_TRAN_CODE 
ADD (PROJECT_LEAD VARCHAR2(1 CHAR) );





alter table WIP_AUDIT modify   (TASK_CARD_PN_SN varchar2(35 CHAR)) ; 


ALTER TABLE WO_TASK_CARD_PN ADD (REFERENCE_LOT VARCHAR2(100 CHAR));

ALTER TABLE WO_TASK_DISCREPANCY MODIFY ( ASSIGN_TO VARCHAR2(25 CHAR));


ALTER TABLE PHASE_TEMPLATE_DETAIL  ADD ( PANEL_ACCESS VARCHAR2(10 CHAR));




ALTER TABLE INTELLI_FORM_DETAIL  MODIFY (GRID_POS_X NUMBER(9, 5) ); 


ALTER TABLE INTELLI_FORM_DETAIL  MODIFY (GRID_POS_Y NUMBER(9, 5) ); 


ALTER TABLE INTELLI_FORM_DETAIL  MODIFY (GRID_POS_Z NUMBER(9, 5) );



-- Prod Control NEW GANTT

ALTER TABLE PHASE_TEMPLATE_DETAIL 
ADD (DURATION NUMBER(10, 2) );


ALTER TABLE WO_TEMPLATE_DETAIL 
ADD (DURATION NUMBER(10, 2) );


ALTER TABLE PHASE_TEMPLATE_DETAIL 
ADD (FROM_LINK NUMBER(8) );

ALTER TABLE PHASE_TEMPLATE_DETAIL 
ADD (TO_LINK NUMBER(8) );

ALTER TABLE PHASE_TEMPLATE_DETAIL 
ADD (PARENT_ITEM NUMBER(8) );

ALTER TABLE WO_TEMPLATE_DETAIL 
ADD (PARENT_ITEM NUMBER(8) );


ALTER TABLE WO_TEMPLATE_DETAIL 
ADD (TO_LINK NUMBER(8, 0) );

ALTER TABLE WO_TEMPLATE_DETAIL RENAME COLUMN ITEM_LINK TO FROM_LINK;



--
alter table wo_task_card add (PANEL_TC VARCHAR2(10 CHAR) ) ;
alter table wo_task_card_item add (PANEL_REF VARCHAR2(50 CHAR) ) ;


CREATE SEQUENCE  "SEQ_WO_PNLTC"  MINVALUE 1000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1001 CACHE 10 ORDER  NOCYCLE;

--Insert your code above here...
ALTER TABLE WO_TEMPLATE_DETAIL
ADD (FROM_LINK NUMBER(8) );

CREATE TABLE "FLIGHT_ASSIGNMENTS"
   (           "FLIGHT" VARCHAR2(10 CHAR) NOT NULL ,
               "EMPLOYEE" VARCHAR2(10 CHAR) NOT NULL ,
               "CREATED_BY" VARCHAR2(10 CHAR),
               "CREATED_DATE" DATE,
               "MODIFIED_BY" VARCHAR2(10 CHAR),
               "MODIFIED_DATE" DATE,
               "NOTES" NUMBER(16,0),
                CONSTRAINT "FLIGHT_ASSIGNMENTS_PK" PRIMARY KEY ("FLIGHT", "EMPLOYEE")
   ENABLE
   );


commit ;  